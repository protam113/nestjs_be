services:
  mongo:
    image: mongo:latest
    container_name: hust4l_mongo
    restart: unless-stopped
    env_file: .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: Admin123
      MONGODB_INITDB_DATABASE: hust4l_db
    ports:
      - '${DB_PORT}:27017'
    volumes:
      - ./addons/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - hust4l_mongo_prod:/data/db
      - ../backup:/backup 
    networks:
      - hust4l_network
    command: mongod --bind_ip_all
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: app
    container_name: hust4l
    restart: unless-stopped
    env_file: .env
    ports:
      - '${PORT}:${PORT}'
    volumes:
      - logs:/home/node/app/logs
      - ./src:/home/node/app/src
    command: yarn start:prod
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - hust4l_network

  redis:
    image: redis:latest
    container_name: hust4l_redis
    restart: unless-stopped
    env_file: .env
    ports:
      - '${REDIS_PORT}:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass $REDIS_PASSWORD
    volumes:
      - cache:/data/cache
    networks:
      - hust4l_network

volumes:
  hust4l_mongo_prod:
  backup:
  cache:
  logs:

networks:
  hust4l_network:
